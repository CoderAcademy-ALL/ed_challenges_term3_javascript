const _ = require("lodash");
const { diamond } = require("./giveMeADiamond.js");

describe("diamond()", function () {
  it("Valid diamonds", () => {
    expect(diamond(1)).toBe("*\n");
    expect(diamond(3)).toBe(" *\n***\n *\n");
    expect(diamond(5)).toBe("  *\n ***\n*****\n ***\n  *\n");
  });

  it("Invalid diamonds", () => {
    expect(diamond(2)).toBe(null);
    expect(diamond(-3)).toBe(null);
    expect(diamond(0)).toBe(null);
  });

  it("Random tests", () => {
    let stars = [
      " *,***, *,",
      "  *, ***,*****, ***,  *,",
      "   *,  ***, *****,*******, *****,  ***,   *,",
      "    *,   ***,  *****, *******,*********, *******,  *****,   ***,    *,",
      "     *,    ***,   *****,  *******, *********,***********, *********,  *******,   *****,    ***,     *,",
      "      *,     ***,    *****,   *******,  *********, ***********,*************, ***********,  *********,   *******,    *****,     ***,      *,",
      "       *,      ***,     *****,    *******,   *********,  ***********, *************,***************, *************,  ***********,   *********,    *******,     *****,      ***,       *,",
      "        *,       ***,      *****,     *******,    *********,   ***********,  *************, ***************,*****************, ***************,  *************,   ***********,    *********,     *******,      *****,       ***,        *,",
      "         *,        ***,       *****,      *******,     *********,    ***********,   *************,  ***************, *****************,*******************, *****************,  ***************,   *************,    ***********,     *********,      *******,       *****,        ***,         *,",
    ];
    let bads = [-5, -4, -3, -2, -1, 0, 2, 4, 6, 10, 12];
    let tests = _.shuffle([...stars, ...bads]);

    let format = (d) =>
      d === "" + d
        ? `[\n${d.split(" ").join(".").split("\n").join("\\n\n")}]`
        : "" + d;

    for (let test of tests) {
      if (+test === test) {
        expect(diamond(test)).toBe(null);
      } else {
        let rows = test.split(",");
        let n = rows.length - 1;
        let expected = rows.join("\n");
        let actual = diamond(n);

        expect(actual).toBe(expected);
      }
    }
  });
});
